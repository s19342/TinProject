[{"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\index.js":"1","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\App.js":"2","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\Register.js":"3","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewCustomer.js":"4","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewProduct.js":"5","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewCusPro.js":"6","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewCustomerOrder.js":"7","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewProductOrder.js":"8","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewFullDetails.js":"9","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\AddCustomer.js":"10","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewAvailableProducts.js":"11","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\AddProduct.js":"12","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\RegisterProduct.js":"13","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\AddOrder.js":"14","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\RegisterOrder.js":"15","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewAll.js":"16"},{"size":151,"mtime":1612179160498,"results":"17","hashOfConfig":"18"},{"size":4723,"mtime":1612509475068,"results":"19","hashOfConfig":"18"},{"size":2947,"mtime":1612508088496,"results":"20","hashOfConfig":"18"},{"size":4044,"mtime":1612508217677,"results":"21","hashOfConfig":"18"},{"size":3849,"mtime":1612510202548,"results":"22","hashOfConfig":"18"},{"size":4015,"mtime":1612510361014,"results":"23","hashOfConfig":"18"},{"size":2490,"mtime":1612510373734,"results":"24","hashOfConfig":"18"},{"size":2435,"mtime":1612510389739,"results":"25","hashOfConfig":"18"},{"size":2546,"mtime":1612510423243,"results":"26","hashOfConfig":"18"},{"size":551,"mtime":1612509788421,"results":"27","hashOfConfig":"18"},{"size":2338,"mtime":1612508154648,"results":"28","hashOfConfig":"18"},{"size":539,"mtime":1612508091350,"results":"29","hashOfConfig":"18"},{"size":2448,"mtime":1612508110111,"results":"30","hashOfConfig":"18"},{"size":528,"mtime":1612508090277,"results":"31","hashOfConfig":"18"},{"size":3866,"mtime":1612508102464,"results":"32","hashOfConfig":"18"},{"size":2558,"mtime":1612510453427,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"xgrf1q",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\index.js",[],["71","72"],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\App.js",[],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\Register.js",[],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewCustomer.js",["73"],"import React, { useState} from 'react';\r\nimport Axios from 'axios';\r\nimport './ViewCustomer.css';\r\n\r\nfunction ViewCustomer() {\r\n    const [customersShown, setCustomersShown] = useState(false);\r\n    const [customerInfo, setCustomerInfo] = useState([]);\r\n    const [dob, setDob] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentStartIndex, setCurrentStartIndex] = useState(0);\r\n    const [currentEndIndex, setCurrentEndIndex] = useState(2);\r\n    const [dobStatus, setDobStatus] = useState('');\r\n    const [serverErrors, setServerErrors] = useState([]);\r\n\r\n    const view = () => {\r\n        try{\r\n            Axios.get('http://localhost:4000/viewCustomer').then((response) => {\r\n            setCustomerInfo([...response.data]);\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const toggleVisiblity = () => {\r\n        setCustomersShown(!customersShown);\r\n    }\r\n\r\n    const toggleView = () => {\r\n        toggleVisiblity();\r\n\r\n        if(!customersShown){\r\n            view();\r\n        }\r\n    }\r\n\r\n    const deleteCustomer = (customerId) => {\r\n        Axios.delete(`http://localhost:4000/deleteCustomer/${customerId}`);\r\n\r\n        toggleView();\r\n    }\r\n\r\n    const checkDob = () => {\r\n        var regex = /\\d{4}-\\d{2}-\\d{2}/;\r\n        return regex.test(dob);\r\n    }\r\n\r\n    const updateCustomer = (id) => {\r\n        if(!checkDob()){\r\n            setDobStatus(\"Date of birth must be in the format YYYY-MM-DD\");\r\n        }else{\r\n            Axios.put(\"http://localhost:4000/updateCustomer\", {id: id, dateofbirth: dob}).then((response) => {\r\n                if(response.data.errors){\r\n                    setServerErrors([...response.data.errors]);\r\n                }else{\r\n                    setServerErrors([]);\r\n                }}\r\n            );\r\n        \r\n            toggleView();\r\n            setDobStatus(\"\");\r\n        }\r\n    }\r\n\r\n    const previousPage = () => {\r\n        if(currentPage !== 1){\r\n            setCurrentPage(currentPage-1);\r\n            setCurrentStartIndex(currentStartIndex-2);\r\n            setCurrentEndIndex(currentEndIndex-2);\r\n        }\r\n    }\r\n\r\n    const nextPage = () => {\r\n        if(currentPage*2 < customerInfo.length){\r\n            setCurrentPage(currentPage+1);\r\n            setCurrentStartIndex(currentStartIndex+2);\r\n            setCurrentEndIndex(currentEndIndex+2);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"viewCustomer\">\r\n            <button className=\"card-button\" className=\"card-button\" onClick={toggleView}>Show Customers</button>\r\n            \r\n            <h1 className=\"errorStatus\">{dobStatus}</h1>\r\n            {customersShown ? (\r\n                        customerInfo.slice(currentStartIndex, currentEndIndex).map(function(item, i){\r\n                            return <li className=\"listItemTable\" key={i}>Email: {item.email} <p></p> Date Of Birth: {item.dateofbirth.substring(0,10)}<p></p>\r\n                            <button className=\"card-button\" onClick={() => deleteCustomer(item.idcustomer)}>DELETE</button><p></p>\r\n                            <label>Date of birth</label><p></p>\r\n                            <input type=\"text\" placeholder=\"YYYY-MM-DD\" onChange={(e)=> {setDob(e.target.value)}}/><p></p>\r\n                            <button className=\"card-button\" onClick={() => updateCustomer(item.idcustomer)}>Update DOB</button>\r\n                            </li>\r\n                        })\r\n            ) : (\r\n            <div></div>\r\n            )}\r\n            {customersShown ? (<div>\r\n                <p></p>\r\n                <button className=\"card-button\" onClick={previousPage}>Previous Page</button>\r\n                <p>{currentPage}</p>\r\n               <button className=\"card-button\" onClick={nextPage}>Next Page</button></div>\r\n            ) : (<div></div>)}\r\n            {serverErrors.map(function(item, i){\r\n                return <li key={i} className=\"errorStatus\">{item.msg}</li>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewCustomer;\r\n","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewProduct.js",[],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewCusPro.js",["74"],"import React, { useState} from 'react';\r\nimport Axios from 'axios';\r\nimport './ViewCustomer.css';\r\n\r\nfunction ViewCusPro() {\r\n    const [cusproShown, setCusproShown] = useState(false);\r\n    const [cusproInfo, setCusproInfo] = useState([]);\r\n    const [quantity, setQuantity] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentStartIndex, setCurrentStartIndex] = useState(0);\r\n    const [currentEndIndex, setCurrentEndIndex] = useState(2);\r\n    const [orderQuantityRegStatus, setOrderQuantityRegStatus] = useState('');\r\n    const [serverErrors, setServerErrors] = useState([]);\r\n\r\n    const view = () => {\r\n        try{\r\n            Axios.get('http://localhost:4000/viewProductCustomer').then((response) => {\r\n                setCusproInfo([...response.data]);\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const toggleVisiblity = () => {\r\n        setCusproShown(!cusproShown);\r\n    }\r\n\r\n    const toggleView = () => {\r\n        toggleVisiblity();\r\n\r\n        if(!cusproShown){\r\n            view();\r\n        }\r\n    }\r\n\r\n    const deleteOrder = (orderId) => {\r\n        Axios.delete(`http://localhost:4000/deleteOrder/${orderId}`);\r\n\r\n        toggleView();\r\n    }\r\n\r\n    const checkQuantity = () => {\r\n        return quantity >= 1;\r\n    }\r\n\r\n    const updateOrder = (id) => {\r\n        if(!checkQuantity()){\r\n            setOrderQuantityRegStatus(\"Quantity must be greater than 0\");\r\n        }else{\r\n            Axios.put(\"http://localhost:4000/updateOrder\", {id: id, quantity: quantity}).then(response => {\r\n                {if(response.data.errors){\r\n                    setServerErrors([...response.data.errors]);\r\n                }else{\r\n                    setServerErrors([]);\r\n                }}\r\n            });\r\n        \r\n            toggleView();\r\n            setOrderQuantityRegStatus(\"\");\r\n        }\r\n    }\r\n\r\n    const previousPage = () => {\r\n        if(currentPage !== 1){\r\n            setCurrentPage(currentPage-1);\r\n            setCurrentStartIndex(currentStartIndex-2);\r\n            setCurrentEndIndex(currentEndIndex-2);\r\n        }\r\n    }\r\n\r\n    const nextPage = () => {\r\n        if(currentPage*2 < cusproInfo.length){\r\n            setCurrentPage(currentPage+1);\r\n            setCurrentStartIndex(currentStartIndex+2);\r\n            setCurrentEndIndex(currentEndIndex+2);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"viewCustomer\">\r\n            <button className=\"card-button\" onClick={toggleView}>Show Orders</button>\r\n            <h1 className=\"errorStatus\">{orderQuantityRegStatus}</h1>\r\n            {cusproShown ? (\r\n                        cusproInfo.slice(currentStartIndex, currentEndIndex).map(function(item, i){\r\n                            return <li className=\"listItemTable\" key={i}>Product ID: {item.idproduct} <p></p> Customer ID: {item.idcustomer} <p></p> Date of Purchase: {item.date.substring(0,10)} <p></p> Amount Purchased: {item.quantity}<p></p><button className=\"card-button\" onClick={() => deleteOrder(item.idorder)}>DELETE</button><p></p>\r\n                            <label>Quantity</label><p></p>\r\n                            <input type=\"number\" onChange={(e)=> {setQuantity(e.target.value)}}/><p></p>\r\n                            <button className=\"card-button\" onClick={() => updateOrder(item.idorder)}>Update Quantity</button>\r\n                            </li>\r\n                        })\r\n            ) : (\r\n            <div></div>\r\n            )}\r\n            {cusproShown ? (<div>\r\n                <p></p>\r\n                <button className=\"card-button\" onClick={previousPage}>Previous Page</button>\r\n                <p>{currentPage}</p>\r\n               <button className=\"card-button\" onClick={nextPage}>Next Page</button></div>\r\n            ) : (<div></div>)}\r\n            {serverErrors.map(function(item, i){\r\n                return <li key={i} className=\"errorStatus\">{item.msg}</li>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewCusPro;\r\n","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewCustomerOrder.js",[],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewProductOrder.js",[],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewFullDetails.js",[],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\AddCustomer.js",[],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewAvailableProducts.js",[],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\AddProduct.js",[],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\RegisterProduct.js",[],["75","76"],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\AddOrder.js",[],"D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\RegisterOrder.js",["77"],"import React, { useState} from 'react';\r\nimport Axios from 'axios';\r\nimport './Flexboxes.css';\r\n\r\nfunction RegisterOrder() {\r\n    const [customerIdReg, setCustomerIdReg] = useState('');\r\n    const [productIdReg, setProductIdReg] = useState('');\r\n    const [orderDateReg, setOrderDateReg] = useState('');\r\n    const [orderQuantityReg, setOrderQuantityReg] = useState('');\r\n    const [customerIdRegStatus, setCustomerIdRegStatus] = useState('');\r\n    const [productIdRegStatus, setProductIdRegStatus] = useState('');\r\n    const [orderDateRegStatus, setOrderDateRegStatus] = useState('');\r\n    const [orderQuantityRegStatus, setOrderQuantityRegStatus] = useState('');\r\n    const [serverErrors, setServerErrors] = useState([]);\r\n\r\n    const checkCusId = () => {\r\n        return customerIdReg >= 1;\r\n    }\r\n\r\n    const checkProId = () => {\r\n        return productIdReg >= 1;\r\n    }\r\n\r\n    const checkDate = () => {\r\n        var regex = /\\d{4}-\\d{2}-\\d{2}/;\r\n        return regex.test(orderDateReg);\r\n    }\r\n\r\n    const checkQuantity = () => {\r\n        return orderQuantityReg >= 1;\r\n    }\r\n\r\n    const register = () => {\r\n        if(!checkCusId()){\r\n            setCustomerIdRegStatus(\"Customer Id must be greater than 0\");\r\n        }else{\r\n            setCustomerIdRegStatus(\"\");\r\n        }\r\n\r\n        if(!checkProId()){\r\n            setProductIdRegStatus(\"Product Id must be greater than 0\");\r\n        }else{\r\n            setProductIdRegStatus(\"\");\r\n        }\r\n\r\n        if(!checkDate()){\r\n            setOrderDateRegStatus(\"Date of birth must be in the format YYYY-MM-DD\");\r\n        }else{\r\n            setOrderDateRegStatus(\"\");\r\n        }\r\n\r\n        if(!checkQuantity()){\r\n            setOrderQuantityRegStatus(\"Quantity must be greater than 0\");\r\n        }else{\r\n            setOrderQuantityRegStatus(\"\");\r\n        }\r\n\r\n        if(checkCusId() && checkProId() && checkDate() && checkQuantity()){\r\n            try{\r\n                Axios.post('http://localhost:4000/insertOrder', {IdCustomer: customerIdReg, IdProduct: productIdReg, Date: orderDateReg, Quantity: orderQuantityReg}).then((response) => {\r\n                if(response.data.errors){\r\n                    setServerErrors([...response.data.errors]);\r\n                }else{\r\n                    setCustomerIdRegStatus(\"\");\r\n                    setProductIdRegStatus(\"\");\r\n                    setOrderDateRegStatus(\"\");\r\n                    setOrderQuantityRegStatus(\"\");\r\n                    setServerErrors([]);\r\n                }});\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex-container\">\r\n            <h1>Add an order</h1>\r\n            <label>Customer ID</label>\r\n            <input type=\"number\" onChange={(e)=>\r\n            {setCustomerIdReg(e.target.value)}}/>\r\n            <h1 className=\"errorStatus\">{customerIdRegStatus}</h1>\r\n            <label>Product ID</label>\r\n            <input type=\"number\" onChange={(e)=>\r\n            {setProductIdReg(e.target.value)}}/>\r\n            <h1 className=\"errorStatus\">{productIdRegStatus}</h1>\r\n            <label>Date of Order</label>\r\n            <input type=\"text\" placeholder=\"YYYY-MM-DD\" onChange={(e)=>\r\n            {setOrderDateReg(e.target.value)}}/>\r\n            <h1 className=\"errorStatus\">{orderDateRegStatus}</h1>\r\n            <label>Quantity of order</label>\r\n            <input type=\"text\" onChange={(e)=>\r\n            {setOrderQuantityReg(e.target.value)}}/>\r\n            <h1 className=\"errorStatus\">{orderQuantityRegStatus}</h1>\r\n            <button className=\"card-button\" className=\"card-button\" onClick={register}>Register</button>\r\n            {serverErrors.map(function(item, i){\r\n                return <li key={i} className=\"errorStatus\">{item.msg}</li>\r\n            })}\r\n        </div>            \r\n    )\r\n}\r\n\r\nexport default RegisterOrder;\r\n","D:\\PJATK\\TIN\\Project\\TinProject\\client\\src\\ViewAll.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":84,"column":45,"nodeType":"84","endLine":84,"endColumn":68},{"ruleId":"85","severity":1,"message":"86","line":53,"column":17,"nodeType":"87","messageId":"88","endLine":57,"endColumn":19},{"ruleId":"78","replacedBy":"89"},{"ruleId":"80","replacedBy":"90"},{"ruleId":"82","severity":1,"message":"83","line":95,"column":45,"nodeType":"84","endLine":95,"endColumn":68},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["91"],["92"],"no-global-assign","no-unsafe-negation"]